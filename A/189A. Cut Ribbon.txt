*************DP***********
#include <bits/stdc++.h>
#define ll long long
#define eps 1e-15
#define PI 3.14159265
#define r second
#define l first
using namespace std;
const int N = 2e6+1 , MAX = 10  , OO = 1000000009;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int  n , a , b , c , dp[4001];
int Dp(int n ){
    if(n < 0)       return -10000000;
    if(n == 0 )     return 0;
    if(dp[n])       return dp[n];
    dp[n] = max(Dp( n - a) + 1 , max(Dp( n - b) + 1 , Dp(n - c) + 1));
    return dp[n];
}
int main(){
  scanf("%d %d %d %d", &n , &a , &b , &c );
  printf("%d\n" , Dp(n));
  return 0;
}


************************************
#include <bits/stdc++.h>
#define ll long long
#define eps 1e-15
#define PI 3.14159265
#define r second
#define l first
using namespace std;
const int N = 2e6+1 , MAX = 10  , OO = 1000000009;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int  n , a , b , c , ans;
vector<int> v ;
int main(){
  scanf("%d %d %d %d", &n , &a , &b , &c );
  for(int i = 0; i <= n; ++i){
    for(int j = 0 ; j <= n; ++j){
        int k = (n - (a*i + b*j) ) / c;
        if( (i * a + j * b + k * c) == n && k >= 0 )  ans = max(ans , i + j + k);
    }
  }
  printf("%d\n" , ans);
  return 0;
}