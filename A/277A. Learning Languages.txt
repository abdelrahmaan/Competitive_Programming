#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+5 ,  M = (1 << 16) , MAX = 10  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int n , m , d , a , c;
vector<vector<int> >v , g;
vector<bool>vis;
bool f;
void dfs(int i){
	vis[i] = 1;
	for(int j = 0 ; j < g[i].size(); ++j){
		for(int k = 0 ; k < v[g[i][j]].size(); ++k)
			if(!vis[v[g[i][j]][k]]) dfs(v[g[i][j]][k]);
	}
}
int main() {
	scanf("%d %d" , &n , &m);
	vis.resize(n) , v.resize(101) , g.resize(n);
	for(int i= 0 ; i < n ; ++i){
		scanf("%d" , &d);
		for(int j = 0 ; j < d; ++j){
			f = 1;
			scanf("%d" , &a);
			g[i].push_back(a);
			v[a].push_back(i);
		}
	}
	for(int i = 0 ; i < n ; ++i)    if(!vis[i]) ++c , dfs(i);
	printf("%d\n" , f ? --c : c);
	return 0;
}
*************************
#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+5 ,  M = (1 << 16) , MAX = 10  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int n , m , d , l , c;
vector<vector<int> >v , g;
vector<bool>vis;
bool f;
void dfs(int i){
	vis[i] = 1;
	for(int x : v[i])   if(!vis[x]) dfs(x);
}
int main() {
	scanf("%d %d" , &n , &m);
	vis.resize(n+m) , v.resize(n+m);
	for(int i= 0 ; i < n ; ++i){
		scanf("%d" , &d);
		for(int j = 0 ; j < d; ++j){
			f = 1;
			scanf("%d" , &l);
			--l;
			v[i].push_back(l+n);
			v[l+n].push_back(i);
		}
	}
	for(int i = 0 ; i < n ; ++i)    if(!vis[i]) ++c , dfs(i);
	printf("%d\n" , f ? --c : n);
	return 0;
}
