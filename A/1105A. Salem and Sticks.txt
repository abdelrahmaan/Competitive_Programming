#include <bits/stdc++.h>
    #define ll long long
    #define cost first
    #define id second
    #define f first
    #define s second
    #define clr(v, d)		memset(v, d, sizeof(v))
    #define read(FILE)  freopen(FILE, "r", stdin);
    #define write(FILE) freopen(FILE, "w", stdout);
    #define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    using namespace std;
    const int N = 5e5+5 ,  nBits = 2e8 +5 , MM = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
    const double PI = acos(-1);
    const ll INF = (ll)1e18;
    //ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
    //ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
    ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
    //bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
    //int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
    //int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
    //len any int num > 0 ... len = ceil(log10(a+1));
    //len any int num > 0 ... len = ceil(log10(a+1));
int n  , arr[1001] , mCost = N , mT;
bool f;

int main(){
    //  freopen("fileName.in" , "r" , stdin);
    scanf("%d" , &n);
    for(int i = 0 ; i < n ; ++i)    scanf("%d" , arr + i);
    for(int j = 1 ; j <= 200 ; ++j){
        int x = 0 , y = 0;
        for(int i = 0 ; i < n ; ++i){
            x = arr[i];
            if(x > j + 1 )               y += x - (j + 1);
            else if(x < j - 1)           y += j - (x + 1);
        }
        if(y < mCost) mCost = y , mT = j;
    }
    printf("%d %d" , mT , mCost);
    return 0;
}
*****************************************************
#include <bits/stdc++.h>
    #define ll long long
    #define cost first
    #define id second
    #define f first
    #define s second
    #define clr(v, d)		memset(v, d, sizeof(v))
    #define read(FILE)  freopen(FILE, "r", stdin);
    #define write(FILE) freopen(FILE, "w", stdout);
    #define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
    using namespace std;
    const int N = 5e5+5 ,  nBits = 2e8 +5 , MM = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
    const double PI = acos(-1);
    const ll INF = (ll)1e18;
    //ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
    //ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
    ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
    //bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
    //int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
    //int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
    //len any int num > 0 ... len = ceil(log10(a+1));
    //len any int num > 0 ... len = ceil(log10(a+1));
int n  , arr[1001] , mCost = N , mT;
bool f;

int main(){
    //  freopen("fileName.in" , "r" , stdin);
    scanf("%d" , &n);
    for(int i = 0 ; i < n ; ++i)    scanf("%d" , arr + i);
    for(int j = 1 ; j <= 200 ; ++j){
        int x = 0 , y = 0;
        for(int i = 0 ; i < n ; ++i)
            if(arr[i] == j) continue;
            else            y += abs(arr[i] - j)-1;
        if(y < mCost) mCost = y , mT = j;
    }
    printf("%d %d" , mT , mCost);
    return 0;
}
