
#include <bits/stdc++.h>
using namespace std;
const int N = 1e6+6 , MAX = 2e5+5  , OO = 1000000009;
string sBits = "0101";
//bitset<N> x(sBits);
vector<bool> isPrime (3003  , 1 );
void seive(){
    isPrime[0] = isPrime[1] = 0;
    for(long long i = 2; i*i <= 3003; ++i)
        if(isPrime[i])
        for(int j = 2*i; j <= 3003; j +=i)
        isPrime[j] = 0;
    }
bool almost(int n){
    int two =0;
    for(int i = 2; i <= n; ++i)
    if(isPrime[i] && n % i == 0) ++two;
    if(two == 2) return 1;
    else         return 0;
}
int aPraime , ans;
int main(){
    scanf("%d" , &aPraime);
    seive();
   for(int k = 2; k <= aPraime; ++k) if(almost(k)) ++ans;
    printf("%d\n" , ans);
        return 0 ;
}
-------------------------------------------------------------
#include <bits/stdc++.h>
using namespace std;
const int N = 5000;
int n, isPrime[N], num[N], ans;
void sieve(){
	for(int i = 2 ; i< N ; ++i)
		if(!isPrime[i])
			for(int j = i ; j < N ; j+=i){
				isPrime[j] = 1;
				++num[j];
	}
}
int main(){
	scanf("%d", &n);
	sieve();
	for(int i = 0 ; i <= n ; ++i)
		if(num[i] == 2)
			++ans;
	printf("%d\n", ans);
	return 0;
}