    #include <bits/stdc++.h>
    #define ll long long
    #define cost first
    #define id second
    #define f first
    #define s second
    #define clr(v, d)		memset(v, d, sizeof(v))
    #define read(FILE)  freopen(FILE, "r", stdin);
    #define write(FILE) freopen(FILE, "w", stdout);
    #define Abdulrahman std::ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
    using namespace std;
    const int N = 1e7+7 ,  nBits = 2e8 +5 , MM = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
    //const ll INF = (ll)1e18;
    //ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
    //ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
    //ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
    //bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
    //int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
    //int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
    //len any int num > 0 ... len = ceil(log10(a+1));
    //len any int num > 0 ... len = ceil(log10(a+1));
//    int n , m , t  , z , vb , vs , x , y , mini , maxi ,len ,  A[111]  , B[111], index , ans , k  , o , fr1[28] , fr2[28];
    int n , k , x , index ,  A[N] ;
    bool f1;
    ll sum ;
    set<int> st;
int main() {
//  freopen("fileName.in" , "r" , stdin);
    scanf("%d %d" , &n , &k);
    for(int i = 0 ; i < n ; ++i){
        scanf("%d" , &x);
        st.insert(x);
    }
    st.insert(0);
    auto it = st.begin();
    while(k){
        if(next(it) == st.end())    printf("0\n");
        else{
            printf("%d\n" , *next(it) - *it);
            it = next(it);
        }
        --k;
    }
    return 0;
}
*****************************************
    #include <bits/stdc++.h>
    #define ll long long
    #define cost first
    #define id second
    #define f first
    #define s second
    #define clr(v, d)		memset(v, d, sizeof(v))
    #define read(FILE)  freopen(FILE, "r", stdin);
    #define write(FILE) freopen(FILE, "w", stdout);
    #define Abdulrahman std::ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
    using namespace std;
    const int N = 1e7+7 ,  nBits = 2e8 +5 , MM = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
    //const ll INF = (ll)1e18;
    //ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
    //ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
    //ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
    //bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
    //int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
    //int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
    //len any int num > 0 ... len = ceil(log10(a+1));
    //len any int num > 0 ... len = ceil(log10(a+1));
//    int n , m , t  , z , vb , vs , x , y , mini , maxi ,len ,  A[111]  , B[111], index , ans , k  , o , fr1[28] , fr2[28];
    int n , k , x , pre ,  A[N] ;
    bool f1;
    ll sum ;
    deque<int> dq;
int main() {
//  freopen("fileName.in" , "r" , stdin);
    scanf("%d %d" , &n , &k);
    for(int i = 0 ; i < n ; ++i){
        scanf("%d" , &x);
        dq.push_back(x);
    }
    sort(dq.begin() , dq.end());
    while(k--){
        while(dq.size() && dq.front() == pre )    dq.pop_front();
        if(dq.size()){
            printf("%d\n" , dq.front() - pre) ;
            pre = dq.front();
            dq.pop_front();
        }else   printf("0\n");
    }
    return 0;
}
