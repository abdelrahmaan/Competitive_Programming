#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+6 ,  M = (1 << 16) , MAX = 10  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int s  , pre , index = 1;
vector<pair<int , int >> p(N);
vector<bool> isPrime(18409202 , 1);
void sieve(){
isPrime[0] = isPrime[1] = 0;
    for(ll i = 3; index <= N ; i += 2){
        if(isPrime[i]){
            for(ll j = i * i; j <= 18409202 ; j += i)  isPrime[j] = 0;
            if(i == pre + 2){
                p[index].first = pre ;
                p[index].second = i ;
                ++index;
            }
            pre = i;
        }
    }
}
int main() {
    sieve();
	while(scanf("%d" , &s) == 1 ){
        printf("(%d, %d)\n", p[s].first, p[s].second);
	}
	return 0;
}


**************************************************
#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+6 ,  M = (1 << 16) , MAX = 10  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 8 && j < 8; }
//len any int num > 0 ... len = ceil(log10(a+1));
int s , x  , p[20000010];
vector<bool> isPrime(20000010 , 1);
void sieve(){
    isPrime[0] = isPrime[1] = 0;
    for(ll i = 2; i * i <= 20000010 ; ++i)
        if(isPrime[i])
            for(ll j = i * i; j <= 20000010 ; j += i)  isPrime[j] = 0;
}
void toP(){
    for(int i = 3 ; i <= 20000000 ; ++i)
        if(isPrime[i] && isPrime[i+2])  p[++x] = i;
}
int main() {
    sieve();
    toP();
	while(scanf("%d" , &s) == 1 ){
        printf("(%d, %d)\n" , p[s], p[s] + 2 );
	}
	return 0;
}
