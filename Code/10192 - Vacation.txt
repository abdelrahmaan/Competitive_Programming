************************************MeMo**********************************************
#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e7 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX = 1e4+4  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 4 && j < 4; }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//int dx[] = {0 , 0  , 1 , -1 };
//int dy[] = {1 , -1 , 0 , 0 };
//len any int num > 0 ... len = ceil(log10(a+1));
char a[105],b[105];
int tc , n,m,dp[105][105];
int LCS(int i,int j){
    if(i == n || j == m)         return 0;  // if we are at the end of one of the string there's no more match
    int &ret = dp[i][j];
    if(ret != -1)                return ret;
    if(a[i] == b[j])             return ret = LCS(i+1,j+1)+1;        // if they're equal then we have a match
//    int choies1 = LCS(i+1 , j);
//    int choies2 = LCS(i   , j+1);      // we try ignore char from a
//    ret = max(choies1 , choies2);     // we try ignore char from b
//    return ret ;
   ret =  max( LCS(i+1,j) , LCS(i,j+1) );                // okk
   return ret;

}

int main(){
    while(gets(a)){
        if(a[0] == '#') break;
        gets(b);
        n = strlen(a);
        m = strlen(b);
        memset(dp , -1 , sizeof(dp));
        printf("Case #%d: you can visit at most %d cities.\n" , ++tc ,LCS(0,0));
    }

  return 0;
}


**********************************************************Dp*****************************************
#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e7 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX = 1e4+4  , OO = 0x3f3f3f3f , mod = 1e9+7 ;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 4 && j < 4; }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//int dx[] = {0 , 0  , 1 , -1 };
//int dy[] = {1 , -1 , 0 , 0 };
//len any int num > 0 ... len = ceil(log10(a+1));
char a[105],b[105];
int tc , n,m,dp[105][105];
int LCS(){
    for(int i = 1 ; i <= n ; ++i)
        for(int j = 1 ; j <= m ; ++j){
            if(a[i-1] == b[j-1])    dp[i][j] = dp[i-1][j-1] + 1;
            else                    dp[i][j] = max(dp[i][j-1] , dp[i-1][j]);
        }
        return dp[n][m];
}

int main(){
    while(gets(a)){
        if(a[0] == '#') break;
        gets(b);
        n = strlen(a);
        m = strlen(b);
        memset(dp , 0 , sizeof(dp));
        printf("Case #%d: you can visit at most %d cities.\n" , ++tc ,LCS());
    }

  return 0;
}

