#include <bits/stdc++.h>
#define ll long long
#define cost first
#define id second
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e6+6 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
const ll INF = (ll)1e18;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
//bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
//int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
//int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//len any int num > 0 ... len = ceil(log10(a+1));
//len any int num > 0 ... len = ceil(log10(a+1));
int sum1 , sum2;
string s1 , s2;
int main(){
    while(getline(cin , s1)){
        getline(cin , s2);
        sum1 = sum2 = 0;
        for(int i=0;i<s1.size();i++){
            if(islower(s1[i]))      sum1 += s1[i] - 'a' + 1;
            else if(isupper(s1[i])) sum1 += s1[i] - 'A' + 1;
        }
       for(int i=0;i<s2.size();i++){
            if(islower(s2[i]))      sum2 += s2[i] - 'a' + 1;
            else if(isupper(s2[i])) sum2 += s2[i] - 'A' + 1;
        }
         (sum1 % 9 == 0) ? sum1 = 9 : sum1 %= 9;
         (sum2 % 9 == 0) ? sum2 = 9 : sum2 %= 9;
        if(sum1>=sum2)  printf("%.2f %\n",sum2*100.0/sum1);
        else            printf("%.2f %\n",sum1*100.0/sum2);

    }

	return 0;
}
