#include <bits/stdc++.h>
#define ll long long
#define cost first
#define id second
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+5 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
const ll INF = (ll)1e18;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
//bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
//int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
//int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//len any int num > 0 ... len = ceil(log10(a+1));
//len any int num > 0 ... len = ceil(log10(a+1));
int t , n , indx , ans , dir[111];
char s[20];
int main() {
    scanf("%d"  ,&t);
    while(t--){
       scanf("%d" , &n);
       for(int i = 1 ; i <= n ; ++i){
           scanf("%s" , s);
           if(s[0] != 'S'){
                if(s[0] == 'L')  --ans , dir[i] = -1;
                else             ++ans , dir[i] = 1;
          }else {
                scanf("%s %d" , s , &indx);
                ans += dir[indx];
                dir[i] = dir[indx];
            }
        }
        printf("%d\n" , ans);
        ans = 0;
        memset(dir , 0 , sizeof dir);
    }
	return 0;
}

*****************************************************

#include <bits/stdc++.h>
#define ll long long
#define cost first
#define id second
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e5+5 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
const ll INF = (ll)1e18;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
//bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
//int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
//int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//len any int num > 0 ... len = ceil(log10(a+1));
//len any int num > 0 ... len = ceil(log10(a+1));
char a[30];
int t , n , ans, e  , dir[110];
int main(){
    scanf("%d" , &t);
        while(t--){
            scanf("%d" , &n);
            ans = 0;
            for(int i = 1 ; i <=n ; ++i){
                scanf("%s" , a);
                if(a[0] == 'L')         --ans , dir[i] = -1;
                else if(a[0] == 'R')    ++ans , dir[i] = 1;
                else{
                    scanf("%s %d" , a , &e);
                    ans += dir[e];
                    dir[i] = dir[e];
                }
            }
            printf("%d\n" , ans);
        }
	return 0;
}