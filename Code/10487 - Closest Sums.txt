#include <bits/stdc++.h>
#define ll long long
#define cost first
#define id second
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e6+6 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
const ll INF = (ll)1e18;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
//bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
//int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
//int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//len any int num > 0 ... len = ceil(log10(a+1));
//len any int num > 0 ... len = ceil(log10(a+1));
int n , t , m, A[1111] , B[30] , x , y , z = INT_MAX , minii = INT_MAX;
bool f;
int main() {
   while(scanf("%d" , &n) , n ){
    for(int i = 0 ; i < n ; ++i)    scanf("%d" , A + i);
    scanf("%d" , &m);
    for(int i = 0 ; i < m ; ++i)    scanf("%d" , B + i);
    printf("Case %d:\n" , ++t);
    for(int i = 0 ; i < m ; ++i){
      x = B[i]; //element of M
      z = INT_MAX , minii = INT_MAX;
      for(int j = 0 ; j < n ; ++j)
          for(int k = j +1 ; k < n ; ++k){
            y = A[j] + A[k];
            if(abs(x - y) < z){
                z = abs(x - y);
                minii = y;
            }
          }
     printf("Closest sum to %d is %d.\n" , x , minii);
    }
    }
    return 0;
}
