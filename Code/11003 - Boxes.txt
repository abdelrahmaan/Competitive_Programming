#include <bits/stdc++.h>
#define ll long long
#define clr(v, d)		memset(v, d, sizeof(v))
#define read(FILE)  freopen(FILE, "r", stdin);
#define write(FILE) freopen(FILE, "w", stdout);
#define Abdulrahman ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
using namespace std;
const int N = 1e4+4 ,  nBits = 2e8 +5 , M = (1 << 16) , MAX =  2e3 , OO = 0x3f3f3f3f , mood = 1e9+7 ;
ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
bool valid(int i , int j) { return i >= 0 && j >= 0 && i < 4 && j < 4; }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//int dx[] = {0 , 0  , 1 , -1 };
//int dy[] = {1 , -1 , 0 , 0 };
//len any int num > 0 ... len = ceil(log10(a+1));
int  n , weights[N] , load[N] , memo[1001][N];
int solve(int i = 0 , int w = N){
    if(!w || i == n)  return 0;
    int &ret = memo[i][w];
    if(~ret)    return ret;
    ret = solve(i+1 , w);
    if(w >= weights[i])    ret = max(ret , solve(i+1, min(w - weights[i] , load[i] ) ) + 1) ;
    return ret;
}
int main(){
	while(scanf("%d" ,&n) , n){
        for(int i = 0 ; i < n ; ++i)    scanf("%d %d"  , &weights[i] , &load[i] );
        memset(memo , -1 , sizeof memo);
        printf("%d\n" , solve());
	}
    return 0;
}
