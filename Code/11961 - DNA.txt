    #include <bits/stdc++.h>
    #define ll long long
    #define cost first
    #define id second
    #define f first
    #define s second
    #define clr(v, d)		memset(v, d, sizeof(v))
    #define read(FILE)  freopen(FILE, "r", stdin);
    #define write(FILE) freopen(FILE, "w", stdout);
    #define Abdulrahman std::ios_base::sync_with_stdio(0); cin.tie(NULL); cout.tie(NULL);
    using namespace std;
    const int N = 1e7+7 ,  nBits = 2e8 +5 , MM = (1 << 16) , MAX =  1111 , OO = 0x3f3f3f3f , MOD = 1e9+7  , inf =  1 << 30;
    const ll INF = (ll)1e18;
    //ll GCD(ll a, ll b) { return !b ? a : GCD(b , a % b); }
    //ll LCM(ll x, ll y) { return (x * y / GCD(x, y)); }
    ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
    //bool valid (int i , int j){ return i >= 0 && j >= 0 && i < n && j < m ;}
    //int X[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
    //int Y[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
    //len any int num > 0 ... len = ceil(log10(a+1));
    //len any int num > 0 ... len = ceil(log10(a+1));
int t , n , k;
set<string> st;
string a;
void solve(string s , int num, int ind){
	if (num > k ) return;
	if (ind == n ){
		st.insert(s);
		return;
	}
	solve(s+'A', (a[ind] == 'A')? num: num+1, ind+1);
	solve(s+'C', (a[ind] == 'C')? num: num+1, ind+1);
	solve(s+'G', (a[ind] == 'G')? num: num+1, ind+1);
	solve(s+'T', (a[ind] == 'T')? num: num+1, ind+1);
}
int main(){
	cin >> t;
	while ( t--){
		st.clear();
		cin >> n >> k >> a;
		solve("" , 0, 0);
		printf("%d\n" , st.size());
		for(string ss : st) cout << ss << endl;
	}
  return 0;
}

