#include <bits/stdc++.h>
#define ll long long
#define eps 1e-15
#define PI 3.14159265
using namespace std;
const int N = 1e6+6 , MAX = 10  , OO = 1000000009;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
//ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
//int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
//int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
int dx[] = {0 , 0  , 1 , -1 };
int dy[] = {1 , -1 , 0 , 0  };
//bool valid(int i , int j) { return i >= 0 && j >= 0 && i < n && j < m; }
//len any int num > 0 ... len = ceil(log10(a+1));
// C(n, r) = n! / ( (n-r)!  * r!)
int n , a , b , cnt , ans , start ;
vector<vector<int> > v;
bool vis[10001];
void dfs(int cur){
    vis[cur] = 1;
    for(int i: v[cur])
        if(!vis[i]){
                ++cnt , dfs(i) , ans = max(ans,cnt);
                if(ans == cnt) start = i;
                cnt--;
            }
     }
int main() {
	scanf("%d" , &n);
	v.resize(n);
    --n;
    for(int i = 0 ; i < n ; ++i){
        scanf("%d %d" , &a  , &b);
        v[--a].push_back(--b);
        v[b].push_back(a);
    }
    dfs(0);
    memset(vis,0,sizeof(vis));
    dfs(start);
	printf("%d\n" , ans );
	return 0;
}
