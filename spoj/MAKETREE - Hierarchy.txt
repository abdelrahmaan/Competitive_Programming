#include <bits/stdc++.h>
#define ll long long
#define eps 1e-15
using namespace std;
const int o = 15 , N = 1e6+6 , MAX = 100  , OO = 1000000009;
ll gcd(ll a, ll b) { return !b ? a : gcd(b , a % b); }
ll lcm(ll x, ll y) { return (x * y / gcd(x, y)); }
ll fact(ll z)      { return (z <= 1) ? 1 : z * fact(z - 1); }
int dx[] = {0 , 0  , 1 , -1 , 1 , -1 ,  1 , -1};
int dy[] = {1 , -1 , 0 , 0 ,  1 , -1 , -1 ,  1};
//len any int num > 0 ... len = ceil(log10(a+1));
int n , k , a , w  , p , st , ans[N];
vector<vector<int>> adj;
vector<int>topSprt;
bool vis[N];
void dfsTopSort(int student){
    vis[student] = 1;
    for(int i = 0; i < (int)adj[student].size() ; ++i){
        int ch = adj[student][i];
        if(!vis[ch])    dfsTopSort(ch);
    }
    topSprt.push_back(student);
}
int main() {
	scanf("%d %d" , &n , &k);
	adj.resize(n + 1);
	for(int i = 1; i <= k ; ++i){
            scanf("%d" , &w);
            for(int j = 0; j < w ; ++j){
                scanf("%d" , &a);
                adj[i].push_back(a);
            }
	}
            for(int i = 1; i <= n ; ++i)
            if(!vis[i]) dfsTopSort(i);

        for(int i = n - 1; i >= 0 ; --i){
             st =  topSprt[i];
             ans[st] = p;
             p = st;
        }
        for(int i = 1; i <= n ; ++i)    printf("%d\n" , ans[i]);

	return 0;
}
