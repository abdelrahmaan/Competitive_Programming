#include <bits/stdc++.h>
using namespace std;
const int N = 1e6+6;
int  t , n , o = 1, nPrime , nZero , b;
vector<int> primes(N , 0);
vector<int> P;
vector<bool> isPrime(N , 1);
void sieve() {
    isPrime[0] = isPrime[1] = 0;        // 0, 1 are not primes
    for (int i = 2; i <= N; ++i)
        if (isPrime[i]) {
                P.push_back(i);
                primes[i] = o; // index contaion num of prime sequential
                ++o;
            for (int j = i * 2; j <= N; j += i)
                isPrime[j] = 0;
        }
}
int main(){
    sieve();
	scanf("%d", &t);
	while(t--){
    scanf("%d", &n);
    if(primes[n]) nPrime  = primes[n];
	else{
            b = (*lower_bound(P.begin() , P.end() , n));
            nPrime = primes[b];
            --nPrime;
	}
	for(int x : primes){
        nZero =0;
	    if(x <= n){
            while(x){
                if(x % 10 !=0){
                    ++nZero;
                    x /=10;
                }
            }
	    }
	}
     printf("%d\n" , nPrime - nZero);
	}
	return 0;
}